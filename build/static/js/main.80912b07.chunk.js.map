{"version":3,"sources":["components/typewriter/index.tsx","components/header/index.tsx","index.tsx"],"names":["Status","interval","words","status","WRITE","currentWordIndex","currentLetterIndex","Typewriter","React","useState","text","setText","useEffect","clearInterval","setInterval","wordToWrite","newText","substring","length","DELETE","className","memo","Header","style","backgroundImage","process","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAKKA,E,uEAAAA,K,cAAAA,E,iBAAAA,M,KAKL,IAKIC,EALEC,EAAQ,CAAC,gBAAiB,UAAW,SAAU,QAAS,YAE1DC,EAAiBH,EAAOI,MACxBC,EAAmB,EACnBC,EAAqB,EAGnBC,EAAa,WACf,MAAwBC,IAAMC,SAAS,IAAvC,mBAAOC,EAAP,KAAaC,EAAb,KA0CA,OAxCAH,IAAMI,WAAU,WAmCZ,OAlCIX,GACAY,cAAcZ,GAGlBA,EAAWa,aAAY,WACnB,GAAIX,IAAWH,EAAOI,MAAO,CACzB,IAAMW,EAAcb,EAAMG,GACpBW,EAAUD,EAAYE,UAAU,EAAGX,GAEzCK,EAAQK,KAERV,EAEyBS,EAAYG,OAAS,KAC1Cf,EAASH,EAAOmB,YAEjB,CACH,IAAMH,EAAUN,EAAKO,UAAU,EAAGX,GAElCK,EAAQK,GAImB,MAF3BV,IAGIH,EAASH,EAAOI,QAEhBC,GACwBH,EAAMgB,SAC1Bb,EAAmB,OAIhC,KAEI,WACHQ,cAAcZ,MAEnB,CAACS,IAEG,qBAAKU,UAAU,aAAf,SAA6BV,KAGzBF,MAAMa,KAAKd,GCvDpBe,G,MAAS,WACX,OACI,sBAAKF,UAAU,SAASG,MAAO,CAAEC,gBAAgB,OAAD,OAASC,GAAT,4BAAhD,UACI,qBAAKC,IAAG,UAAKD,GAAL,uBAAkDE,IAAI,YAC9D,qBAAKP,UAAU,gBAAf,4BACA,qBAAKA,UAAU,eAAf,kCACA,cAAC,EAAD,SAKGZ,MAAMa,KAAKC,GCP1BM,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.80912b07.chunk.js","sourcesContent":["import React from \"react\";\n\n// styles\nimport \"./styles.scss\";\n\nenum Status {\n    WRITE = \"write\",\n    DELETE = \"delete\",\n}\n\nconst words = [\"Web developer\", \"Manager\", \"Runner\", \"Gamer\", \"Marksman\"];\n\nlet status: Status = Status.WRITE;\nlet currentWordIndex = 0;\nlet currentLetterIndex = 0;\nlet interval: NodeJS.Timer;\n\nconst Typewriter = () => {\n    const [text, setText] = React.useState(\"\");\n\n    React.useEffect(() => {\n        if (interval) {\n            clearInterval(interval);\n        }\n\n        interval = setInterval(() => {\n            if (status === Status.WRITE) {\n                const wordToWrite = words[currentWordIndex];\n                const newText = wordToWrite.substring(0, currentLetterIndex);\n\n                setText(newText);\n\n                currentLetterIndex++;\n\n                if (currentLetterIndex > wordToWrite.length + 10) {\n                    status = Status.DELETE;\n                }\n            } else {\n                const newText = text.substring(0, currentLetterIndex);\n\n                setText(newText);\n\n                currentLetterIndex--;\n\n                if (currentLetterIndex === 0) {\n                    status = Status.WRITE;\n\n                    currentWordIndex++;\n                    if (currentWordIndex >= words.length) {\n                        currentWordIndex = 0;\n                    }\n                }\n            }\n        }, 100);\n\n        return () => {\n            clearInterval(interval);\n        };\n    }, [text]);\n\n    return <div className=\"typewriter\">{text}</div>;\n};\n\nexport default React.memo(Typewriter);\n","import React from \"react\";\n\n// components\nimport Typewriter from \"../typewriter\";\n\n// styles\nimport \"./styles.scss\";\n\nconst Header = () => {\n    return (\n        <div className=\"header\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/images/background.jpg)` }}>\n            <img src={`${process.env.PUBLIC_URL}/images/profile.jpg`} alt=\"profile\" />\n            <div className=\"header__intro\">&#47;&#47; Hello world</div>\n            <div className=\"header__name\">I'm Martin Blackburn</div>\n            <Typewriter />\n        </div>\n    );\n};\n\nexport default React.memo(Header);\n","// libraries\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// styles\nimport \"./index.scss\";\n\n// App\n// import Nav from \"./components/nav\";\nimport Header from \"./components/header\";\n// import Timeline from \"./components/timeline\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Header />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}